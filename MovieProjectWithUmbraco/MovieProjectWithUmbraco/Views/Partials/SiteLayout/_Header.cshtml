@using MovieProjectWithUmbraco.Models
@inherits UmbracoViewPage<IEnumerable<NavigationListItem>>
@{ 
    var loggedMember = Membership.GetUser();
}

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                @RenderChildItems(Model)
            </ul>
            <ul class="nav navbar-nav navbar-right">
                @if (loggedMember == null)
                {
                    <li><a href="/register">Register</a></li>
                    <li><a href="/login"><span class="glyphicon glyphicon-log-in"></span> Log in</a></li>
                }
                else
                {
                    <li class="user-greetings-item"><span class="user-name">Welcome <span class="glyphicon glyphicon-user"></span>@loggedMember.UserName</span></li>
                    <li><a href="@Url.Action("MemberLogOut", "Account")"><span class="glyphicon glyphicon-log-out"></span> Log out</a></li>
                }
            </ul>
        </div>
    </div>
</div>

@helper RenderChildItems(IEnumerable<NavigationListItem> listItems)
{
    if (listItems != null)
    {
        foreach (var item in listItems)
        {
            <li>
                @if (!string.IsNullOrEmpty(item.Text))
                {
                    @item.Text
                }
                else if (item.Link != null)
                {
                    <a href="@item.Link.Url">@item.Link.Text</a>
                }

                @if (item.HasChildren)
                {
                    <ul class="sub-menu">
                        @RenderChildItems(item.Items)
                    </ul>
                }
            </li>
        }
    }
}
